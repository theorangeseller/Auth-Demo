name: Deploy to Azure Web App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python version
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Create and activate virtual environment
      run: |
        uv venv
        echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
        echo "$PWD/.venv/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv sync

    - name: Verify requirements.txt exists and content
      run: |
        echo "Requirements.txt content:"
        cat requirements.txt
        echo ""
        echo "Checking for pyjwt..."
        grep -i jwt requirements.txt
        echo ""
        echo "File size and permissions:"
        ls -la requirements.txt

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: python-app
        path: |
          main.py
          run.py
          pyproject.toml
          requirements.txt
          .python-version
          templates/
          README.md
          uv.lock

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: python-app

    - name: Verify files before deployment
      run: |
        echo "Files being deployed:"
        ls -la
        echo ""
        echo "Requirements.txt content:"
        cat requirements.txt
        echo ""
        echo "Python version file:"
        cat .python-version

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      id: deploy-to-webapp
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        slot-name: 'Production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} 